"""
Zoho OAuth Wizard - –º–∞—Å—Ç–µ—Ä –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–æ–≤ —á–µ—Ä–µ–∑ OAuth flow

–ü–æ—à–∞–≥–æ–≤—ã–π –ø—Ä–æ—Ü–µ—Å—Å:
1. –í–≤–æ–¥ Client ID –∏ Client Secret
2. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è authorization URL
3. –ü–æ–ª—É—á–µ–Ω–∏–µ authorization code –∏–∑ –±—Ä–∞—É–∑–µ—Ä–∞
4. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ refresh_token –∏ access_token
5. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ credentials/zoho.env
"""

from PyQt6.QtWidgets import *
from PyQt6.QtCore import Qt, QThread, pyqtSignal, QUrl
from PyQt6.QtGui import QDesktopServices
import requests
import os
from pathlib import Path


class OAuthTokenThread(QThread):
    """–ü–æ—Ç–æ–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–æ–≤ –≤ —Ñ–æ–Ω–µ"""
    finished = pyqtSignal(dict, str)  # tokens_data, error_message
    
    def __init__(self, client_id, client_secret, auth_code, redirect_uri):
        super().__init__()
        self.client_id = client_id
        self.client_secret = client_secret
        self.auth_code = auth_code
        self.redirect_uri = redirect_uri
    
    def run(self):
        try:
            url = "https://accounts.zoho.com/oauth/v2/token"
            params = {
                "client_id": self.client_id,
                "client_secret": self.client_secret,
                "grant_type": "authorization_code",
                "code": self.auth_code,
                "redirect_uri": self.redirect_uri,
            }
            
            response = requests.post(url, data=params, timeout=10)
            
            if response.status_code == 200:
                data = response.json()
                self.finished.emit(data, "")
            else:
                error = f"HTTP {response.status_code}: {response.text}"
                self.finished.emit({}, error)
        except Exception as e:
            self.finished.emit({}, str(e))


class ZohoOAuthWizard(QDialog):
    """–ú–∞—Å—Ç–µ—Ä OAuth –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ Zoho"""
    
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setWindowTitle('Zoho OAuth Wizard')
        self.setMinimumWidth(700)
        self.setMinimumHeight(500)
        
        self.tokens_data = {}
        self.thread = None
        
        # –î–µ—Ñ–æ–ª—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
        self.redirect_uri = "https://www.zoho.com/projects/"
        
        self.init_ui()
    
    def init_ui(self):
        layout = QVBoxLayout(self)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title = QLabel('üîê Zoho OAuth Authorization')
        title.setStyleSheet('font-size: 16px; font-weight: bold;')
        layout.addWidget(title)
        
        desc = QLabel(
            '–≠—Ç–æ—Ç –º–∞—Å—Ç–µ—Ä –ø–æ–º–æ–∂–µ—Ç –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω—ã –¥–æ—Å—Ç—É–ø–∞ –∫ Zoho Projects API.\n'
            '–°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –Ω–∞ –∫–∞–∂–¥–æ–º —à–∞–≥–µ.'
        )
        desc.setWordWrap(True)
        layout.addWidget(desc)
        
        layout.addSpacing(10)
        
        # –°—Ç–µ–∫ –≤–∏–¥–∂–µ—Ç–æ–≤ –¥–ª—è —à–∞–≥–æ–≤
        self.stack = QStackedWidget()
        layout.addWidget(self.stack)
        
        # –®–∞–≥ 1: Client ID & Secret
        self.stack.addWidget(self.create_step1())
        
        # –®–∞–≥ 2: Authorization URL
        self.stack.addWidget(self.create_step2())
        
        # –®–∞–≥ 3: Authorization Code
        self.stack.addWidget(self.create_step3())
        
        # –®–∞–≥ 4: –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤
        self.stack.addWidget(self.create_step4())
        
        # –®–∞–≥ 5: –£—Å–ø–µ—Ö
        self.stack.addWidget(self.create_step5())
        
        # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        button_layout = QHBoxLayout()
        
        self.back_btn = QPushButton('‚óÄ –ù–∞–∑–∞–¥')
        self.back_btn.clicked.connect(self.go_back)
        self.back_btn.setEnabled(False)
        button_layout.addWidget(self.back_btn)
        
        button_layout.addStretch()
        
        self.next_btn = QPushButton('–î–∞–ª–µ–µ ‚ñ∂')
        self.next_btn.clicked.connect(self.go_next)
        button_layout.addWidget(self.next_btn)
        
        self.cancel_btn = QPushButton('–û—Ç–º–µ–Ω–∞')
        self.cancel_btn.clicked.connect(self.reject)
        button_layout.addWidget(self.cancel_btn)
        
        layout.addLayout(button_layout)
        
        # –ü—Ä–æ–≥—Ä–µ—Å—Å
        self.progress = QLabel('–®–∞–≥ 1 –∏–∑ 5')
        self.progress.setAlignment(Qt.AlignmentFlag.AlignCenter)
        layout.addWidget(self.progress)
    
    def create_step1(self):
        """–®–∞–≥ 1: –í–≤–æ–¥ Client ID –∏ Secret"""
        widget = QWidget()
        layout = QVBoxLayout(widget)
        
        layout.addWidget(QLabel('<h3>üìã –®–∞–≥ 1: Client ID –∏ Client Secret</h3>'))
        
        info = QLabel(
            '<b>–ì–¥–µ –≤–∑—è—Ç—å Client ID –∏ Secret?</b><br><br>'
            '1. –û—Ç–∫—Ä–æ–π—Ç–µ <a href="https://api-console.zoho.com/">Zoho API Console</a><br>'
            '2. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ (Server-based Applications)<br>'
            '3. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ Client ID –∏ Client Secret<br><br>'
            '<b>Redirect URI:</b> https://www.zoho.com/projects/'
        )
        info.setOpenExternalLinks(True)
        info.setWordWrap(True)
        layout.addWidget(info)
        
        form = QFormLayout()
        
        self.client_id_input = QLineEdit()
        self.client_id_input.setPlaceholderText('1000.XXXXXXXXXXXXXXXXXXXXXXXX')
        form.addRow('* Client ID:', self.client_id_input)
        
        self.client_secret_input = QLineEdit()
        self.client_secret_input.setEchoMode(QLineEdit.EchoMode.Password)
        self.client_secret_input.setPlaceholderText('xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx')
        form.addRow('* Client Secret:', self.client_secret_input)
        
        self.redirect_uri_input = QLineEdit(self.redirect_uri)
        form.addRow('Redirect URI:', self.redirect_uri_input)
        
        layout.addLayout(form)
        layout.addStretch()
        
        return widget
    
    def create_step2(self):
        """–®–∞–≥ 2: Authorization URL"""
        widget = QWidget()
        layout = QVBoxLayout(widget)
        
        layout.addWidget(QLabel('<h3>üîó –®–∞–≥ 2: Authorization URL</h3>'))
        
        info = QLabel(
            '<b>–ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å?</b><br><br>'
            '1. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–û—Ç–∫—Ä—ã—Ç—å –≤ –±—Ä–∞—É–∑–µ—Ä–µ"<br>'
            '2. –ê–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å –≤ Zoho (–µ—Å–ª–∏ –µ—â—ë –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã)<br>'
            '3. –†–∞–∑—Ä–µ—à–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ Zoho Projects<br>'
            '4. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ "code" –∏–∑ URL –ø–æ—Å–ª–µ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞<br><br>'
            '<b>–ü—Ä–∏–º–µ—Ä URL –ø–æ—Å–ª–µ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞:</b><br>'
            '<code>https://www.zoho.com/projects/?code=<b>1000.xxxxx</b>&...</code>'
        )
        info.setWordWrap(True)
        layout.addWidget(info)
        
        self.auth_url_text = QTextEdit()
        self.auth_url_text.setReadOnly(True)
        self.auth_url_text.setMaximumHeight(100)
        layout.addWidget(QLabel('Authorization URL:'))
        layout.addWidget(self.auth_url_text)
        
        open_btn = QPushButton('üåê –û—Ç–∫—Ä—ã—Ç—å –≤ –±—Ä–∞—É–∑–µ—Ä–µ')
        open_btn.clicked.connect(self.open_auth_url)
        layout.addWidget(open_btn)
        
        layout.addStretch()
        
        return widget
    
    def create_step3(self):
        """–®–∞–≥ 3: –í–≤–æ–¥ Authorization Code"""
        widget = QWidget()
        layout = QVBoxLayout(widget)
        
        layout.addWidget(QLabel('<h3>üîë –®–∞–≥ 3: Authorization Code</h3>'))
        
        info = QLabel(
            '<b>–í—Å—Ç–∞–≤—å—Ç–µ –∫–æ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:</b><br><br>'
            '–ü–æ—Å–ª–µ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞ –≤ –±—Ä–∞—É–∑–µ—Ä–µ —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ <b>code</b> –∏–∑ URL.<br><br>'
            '<b>–ü—Ä–∏–º–µ—Ä:</b><br>'
            'https://www.zoho.com/projects/?<b>code=1000.xxxxx</b>&...<br><br>'
            '–í—Å—Ç–∞–≤—å—Ç–µ —Ç–æ–ª—å–∫–æ —Å–∞–º –∫–æ–¥ (–±–µ–∑ "code="):'
        )
        info.setWordWrap(True)
        layout.addWidget(info)
        
        self.auth_code_input = QLineEdit()
        self.auth_code_input.setPlaceholderText('1000.xxxxxxxxxxxxxxxxxxxxxxxxxxxxx')
        layout.addWidget(QLabel('* Authorization Code:'))
        layout.addWidget(self.auth_code_input)
        
        layout.addStretch()
        
        return widget
    
    def create_step4(self):
        """–®–∞–≥ 4: –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤"""
        widget = QWidget()
        layout = QVBoxLayout(widget)
        
        layout.addWidget(QLabel('<h3>‚è≥ –®–∞–≥ 4: –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤</h3>'))
        
        self.step4_info = QLabel('–ù–∞–∂–º–∏—Ç–µ "–î–∞–ª–µ–µ" –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–æ–≤...')
        self.step4_info.setWordWrap(True)
        layout.addWidget(self.step4_info)
        
        self.step4_progress = QProgressBar()
        self.step4_progress.setRange(0, 0)  # Indeterminate
        self.step4_progress.setVisible(False)
        layout.addWidget(self.step4_progress)
        
        self.step4_log = QTextEdit()
        self.step4_log.setReadOnly(True)
        self.step4_log.setMaximumHeight(200)
        layout.addWidget(self.step4_log)
        
        layout.addStretch()
        
        return widget
    
    def create_step5(self):
        """–®–∞–≥ 5: –£—Å–ø–µ—Ö"""
        widget = QWidget()
        layout = QVBoxLayout(widget)
        
        layout.addWidget(QLabel('<h3>‚úÖ –£—Å–ø–µ—Ö!</h3>'))
        
        self.step5_info = QLabel()
        self.step5_info.setWordWrap(True)
        layout.addWidget(self.step5_info)
        
        self.step5_details = QTextEdit()
        self.step5_details.setReadOnly(True)
        self.step5_details.setMaximumHeight(200)
        layout.addWidget(self.step5_details)
        
        layout.addStretch()
        
        finish_btn = QPushButton('‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å')
        finish_btn.clicked.connect(self.accept)
        layout.addWidget(finish_btn)
        
        return widget
    
    def go_next(self):
        """–ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥"""
        current = self.stack.currentIndex()
        
        if current == 0:  # –®–∞–≥ 1 -> 2
            if not self.validate_step1():
                return
            self.prepare_step2()
            self.stack.setCurrentIndex(1)
            self.back_btn.setEnabled(True)
        
        elif current == 1:  # –®–∞–≥ 2 -> 3
            self.stack.setCurrentIndex(2)
        
        elif current == 2:  # –®–∞–≥ 3 -> 4
            if not self.validate_step3():
                return
            self.stack.setCurrentIndex(3)
            self.next_btn.setEnabled(False)
            self.request_tokens()
        
        elif current == 3:  # –®–∞–≥ 4 -> 5 (auto)
            pass
        
        elif current == 4:  # Finish
            self.accept()
        
        self.update_progress()
    
    def go_back(self):
        """–í–æ–∑–≤—Ä–∞—Ç –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏–π —à–∞–≥"""
        current = self.stack.currentIndex()
        if current > 0:
            self.stack.setCurrentIndex(current - 1)
            if current == 1:
                self.back_btn.setEnabled(False)
        self.update_progress()
    
    def update_progress(self):
        """–û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä"""
        step = self.stack.currentIndex() + 1
        self.progress.setText(f'–®–∞–≥ {step} –∏–∑ 5')
    
    def validate_step1(self):
        """–í–∞–ª–∏–¥–∞—Ü–∏—è —à–∞–≥–∞ 1"""
        client_id = self.client_id_input.text().strip()
        client_secret = self.client_secret_input.text().strip()
        
        if not client_id or not client_secret:
            QMessageBox.warning(self, '–û—à–∏–±–∫–∞', '–ó–∞–ø–æ–ª–Ω–∏—Ç–µ Client ID –∏ Client Secret')
            return False
        
        return True
    
    def prepare_step2(self):
        """–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —à–∞–≥–∞ 2"""
        client_id = self.client_id_input.text().strip()
        redirect_uri = self.redirect_uri_input.text().strip()
        
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è authorization URL
        # –ü–æ–ª–Ω—ã–π –Ω–∞–±–æ—Ä —Å–∫–æ–ø–æ–≤ –¥–ª—è Zoho Projects + Bug Tracker + WorkDrive
        scopes = [
            "ZohoProjects.portals.ALL",
            "ZohoProjects.projects.ALL",
            "ZohoProjects.activities.ALL",
            "ZohoProjects.feeds.ALL",
            "ZohoProjects.status.ALL",
            "ZohoProjects.milestones.ALL",
            "ZohoProjects.tasklists.ALL",
            "ZohoProjects.tasks.ALL",
            "ZohoProjects.timesheets.ALL",
            "ZohoProjects.bugs.ALL",
            "ZohoProjects.events.ALL",
            "ZohoProjects.forums.ALL",
            "ZohoProjects.clients.ALL",
            "ZohoProjects.users.ALL",
            "ZohoProjects.documents.ALL",
            "ZohoProjects.search.ALL",
            "ZohoProjects.tags.ALL",
            "ZohoProjects.calendar.ALL",
            "ZohoProjects.integrations.ALL",
            "ZohoProjects.projectgroups.ALL",
            "ZohoProjects.entity_properties.ALL",
            "ZohoBugTracker.bugs.ALL",
            "ZohoBugTracker.milestones.ALL",
            "ZohoBugTracker.tasklists.ALL",
            "ZohoBugTracker.projects.ALL",
            "ZohoBugTracker.users.ALL",
            "ZohoBugTracker.status.ALL",
            "ZohoPC.files.ALL",
            "WorkDrive.workspace.ALL",
            "WorkDrive.files.ALL",
            "WorkDrive.team.ALL",
        ]
        
        auth_url = (
            f"https://accounts.zoho.com/oauth/v2/auth?"
            f"scope={','.join(scopes)}&"
            f"client_id={client_id}&"
            f"response_type=code&"
            f"redirect_uri={redirect_uri}&"
            f"access_type=offline"
        )
        
        self.auth_url = auth_url
        self.auth_url_text.setPlainText(auth_url)
    
    def open_auth_url(self):
        """–û—Ç–∫—Ä—ã—Ç—å authorization URL –≤ –±—Ä–∞—É–∑–µ—Ä–µ"""
        QDesktopServices.openUrl(QUrl(self.auth_url))
    
    def validate_step3(self):
        """–í–∞–ª–∏–¥–∞—Ü–∏—è —à–∞–≥–∞ 3"""
        auth_code = self.auth_code_input.text().strip()
        
        if not auth_code:
            QMessageBox.warning(self, '–û—à–∏–±–∫–∞', '–í–≤–µ–¥–∏—Ç–µ authorization code')
            return False
        
        return True
    
    def request_tokens(self):
        """–ó–∞–ø—Ä–æ—Å —Ç–æ–∫–µ–Ω–æ–≤"""
        self.step4_info.setText('‚è≥ –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤...')
        self.step4_progress.setVisible(True)
        self.step4_log.append('üîÑ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ Zoho OAuth...')
        
        client_id = self.client_id_input.text().strip()
        client_secret = self.client_secret_input.text().strip()
        auth_code = self.auth_code_input.text().strip()
        redirect_uri = self.redirect_uri_input.text().strip()
        
        self.thread = OAuthTokenThread(client_id, client_secret, auth_code, redirect_uri)
        self.thread.finished.connect(self.on_tokens_received)
        self.thread.start()
    
    def on_tokens_received(self, data, error):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö —Ç–æ–∫–µ–Ω–æ–≤"""
        self.step4_progress.setVisible(False)
        
        if error:
            self.step4_info.setText(f'‚ùå –û—à–∏–±–∫–∞: {error}')
            self.step4_log.append(f'\n‚ùå –û–®–ò–ë–ö–ê:\n{error}')
            self.next_btn.setEnabled(True)
            QMessageBox.critical(self, '–û—à–∏–±–∫–∞', f'–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω—ã:\n{error}')
            return
        
        if not data.get('access_token'):
            error_msg = f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞: {data}"
            self.step4_info.setText(f'‚ùå –û—à–∏–±–∫–∞')
            self.step4_log.append(f'\n‚ùå {error_msg}')
            self.next_btn.setEnabled(True)
            QMessageBox.critical(self, '–û—à–∏–±–∫–∞', error_msg)
            return
        
        self.tokens_data = data
        
        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤
        try:
            self.save_tokens(data)
            self.step4_log.append('\n‚úÖ –¢–æ–∫–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã!')
            self.step4_log.append(f'‚úÖ Access Token: {data["access_token"][:20]}...')
            self.step4_log.append(f'‚úÖ Refresh Token: {data.get("refresh_token", "N/A")[:20]}...')
            self.step4_log.append(f'‚úÖ –¢–æ–∫–µ–Ω—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ credentials/zoho.env')
            
            # –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —à–∞–≥ 5
            self.prepare_step5()
            self.stack.setCurrentIndex(4)
            self.next_btn.setText('–ó–∞–≤–µ—Ä—à–∏—Ç—å')
            self.next_btn.setEnabled(True)
            self.update_progress()
            
        except Exception as e:
            self.step4_log.append(f'\n‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {e}')
            QMessageBox.critical(self, '–û—à–∏–±–∫–∞', f'–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç–æ–∫–µ–Ω—ã:\n{e}')
            self.next_btn.setEnabled(True)
    
    def save_tokens(self, data):
        """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤ –≤ credentials/zoho.env"""
        project_root = Path(__file__).parent.parent.parent.parent
        env_path = project_root / 'credentials' / 'zoho.env'
        
        # –ß–∏—Ç–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ñ–∞–π–ª
        with open(env_path, 'r', encoding='utf-8') as f:
            lines = f.readlines()
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω—ã
        with open(env_path, 'w', encoding='utf-8') as f:
            for line in lines:
                if line.startswith('ZOHO_ACCESS_TOKEN='):
                    f.write(f'ZOHO_ACCESS_TOKEN={data["access_token"]}\n')
                elif line.startswith('ZOHO_REFRESH_TOKEN='):
                    refresh_token = data.get('refresh_token', '')
                    f.write(f'ZOHO_REFRESH_TOKEN={refresh_token}\n')
                elif line.startswith('ZOHO_CLIENT_ID='):
                    f.write(f'ZOHO_CLIENT_ID={self.client_id_input.text().strip()}\n')
                elif line.startswith('ZOHO_CLIENT_SECRET='):
                    f.write(f'ZOHO_CLIENT_SECRET={self.client_secret_input.text().strip()}\n')
                else:
                    f.write(line)
    
    def prepare_step5(self):
        """–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —à–∞–≥–∞ 5"""
        info = (
            '<b>‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!</b><br><br>'
            '–¢–æ–∫–µ–Ω—ã –¥–æ—Å—Ç—É–ø–∞ –∫ Zoho Projects API –ø–æ–ª—É—á–µ–Ω—ã –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.<br><br>'
            '–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ:<br>'
            '‚Ä¢ –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ Zoho<br>'
            '‚Ä¢ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∑–∞–¥–∞—á–∏ –∏ –±–∞–≥–∏<br>'
            '‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏<br><br>'
            '<b>–¢–æ–∫–µ–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏.</b>'
        )
        self.step5_info.setText(info)
        
        details = f"""
–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤: credentials/zoho.env

Access Token: {self.tokens_data.get('access_token', 'N/A')[:30]}...
Refresh Token: {self.tokens_data.get('refresh_token', 'N/A')[:30]}...
Expires in: {self.tokens_data.get('expires_in', 'N/A')} seconds

Client ID: {self.client_id_input.text().strip()}
"""
        self.step5_details.setPlainText(details)
