"""
Report Template Editor

–ü—Ä–æ—Å—Ç–æ–π —Ä–µ–¥–∞–∫—Ç–æ—Ä markdown —à–∞–±–ª–æ–Ω–æ–≤ –æ—Ç—á—ë—Ç–æ–≤ —Å preview
"""

from PyQt6.QtWidgets import *
from PyQt6.QtCore import Qt
from PyQt6.QtGui import QFont
import logging

logger = logging.getLogger(__name__)


class TemplateEditorDialog(QDialog):
    """–†–µ–¥–∞–∫—Ç–æ—Ä —à–∞–±–ª–æ–Ω–∞ –æ—Ç—á—ë—Ç–∞"""
    
    def __init__(self, session, template=None, parent=None):
        super().__init__(parent)
        self.session = session
        self.template = template
        self.is_new = template is None
        
        self.setWindowTitle('–†–µ–¥–∞–∫—Ç–æ—Ä —à–∞–±–ª–æ–Ω–∞ –æ—Ç—á—ë—Ç–∞' if self.is_new else f'–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: {template.name}')
        self.setMinimumWidth(900)
        self.setMinimumHeight(700)
        
        self.init_ui()
        
        if self.template:
            self.load_template()
    
    def init_ui(self):
        layout = QVBoxLayout(self)
        
        # === –°–µ–∫—Ü–∏—è 1: –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ ===
        meta_group = QGroupBox('–ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ —à–∞–±–ª–æ–Ω–∞')
        meta_layout = QFormLayout(meta_group)
        
        self.name_edit = QLineEdit()
        self.name_edit.setPlaceholderText('–ù–∞–ø—Ä–∏–º–µ—Ä: Test Plan Sprint')
        meta_layout.addRow('* –ù–∞–∑–≤–∞–Ω–∏–µ:', self.name_edit)
        
        self.description_edit = QLineEdit()
        self.description_edit.setPlaceholderText('–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞')
        meta_layout.addRow('–û–ø–∏—Å–∞–Ω–∏–µ:', self.description_edit)
        
        self.type_combo = QComboBox()
        self.type_combo.addItems(['test_plan', 'bug_report', 'sprint_report', 'custom'])
        meta_layout.addRow('* –¢–∏–ø —à–∞–±–ª–æ–Ω–∞:', self.type_combo)
        
        layout.addWidget(meta_group)
        
        # === –°–µ–∫—Ü–∏—è 2: –ö–æ–Ω—Ç–µ–Ω—Ç (Split: Editor | Preview) ===
        content_label = QLabel('<b>–ö–æ–Ω—Ç–µ–Ω—Ç —à–∞–±–ª–æ–Ω–∞ (Markdown)</b>')
        layout.addWidget(content_label)
        
        # Hint —Å placeholder'–∞–º–∏
        hint_label = QLabel(
            '<i>üí° –î–æ—Å—Ç—É–ø–Ω—ã–µ placeholder\'—ã: {{milestone_name}}, {{task_count}}, {{date}}, {{qa_name}}</i>'
        )
        hint_label.setStyleSheet('color: gray; font-size: 9pt;')
        layout.addWidget(hint_label)
        
        splitter = QSplitter(Qt.Orientation.Horizontal)
        
        # –õ–µ–≤–∞—è –ø–∞–Ω–µ–ª—å: Markdown Editor
        editor_widget = QWidget()
        editor_layout = QVBoxLayout(editor_widget)
        editor_layout.setContentsMargins(0, 0, 0, 0)
        
        editor_label = QLabel('üìù Markdown Editor:')
        editor_layout.addWidget(editor_label)
        
        self.content_edit = QTextEdit()
        self.content_edit.setFont(QFont('Consolas', 10))
        self.content_edit.setPlaceholderText('# –í–≤–µ–¥–∏—Ç–µ markdown —Ç–µ–∫—Å—Ç —à–∞–±–ª–æ–Ω–∞...\n\n## –†–∞–∑–¥–µ–ª 1\n...')
        self.content_edit.textChanged.connect(self.update_preview)
        editor_layout.addWidget(self.content_edit)
        
        splitter.addWidget(editor_widget)
        
        # –ü—Ä–∞–≤–∞—è –ø–∞–Ω–µ–ª—å: Preview
        preview_widget = QWidget()
        preview_layout = QVBoxLayout(preview_widget)
        preview_layout.setContentsMargins(0, 0, 0, 0)
        
        preview_label = QLabel('üëÅÔ∏è Preview:')
        preview_layout.addWidget(preview_label)
        
        self.preview_text = QTextEdit()
        self.preview_text.setReadOnly(True)
        self.preview_text.setStyleSheet('background-color: #f5f5f5;')
        preview_layout.addWidget(self.preview_text)
        
        splitter.addWidget(preview_widget)
        
        # –ü—Ä–æ–ø–æ—Ä—Ü–∏–∏ 60/40
        splitter.setStretchFactor(0, 60)
        splitter.setStretchFactor(1, 40)
        
        layout.addWidget(splitter)
        
        # === –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π ===
        buttons_layout = QHBoxLayout()
        
        # –õ–µ–≤—ã–µ –∫–Ω–æ–ø–∫–∏ (—à–∞–±–ª–æ–Ω—ã)
        template_btn = QPushButton('üìã –í—Å—Ç–∞–≤–∏—Ç—å –ø—Ä–∏–º–µ—Ä')
        template_btn.clicked.connect(self.insert_example)
        buttons_layout.addWidget(template_btn)
        
        buttons_layout.addStretch()
        
        # –ü—Ä–∞–≤—ã–µ –∫–Ω–æ–ø–∫–∏ (—Å–æ—Ö—Ä–∞–Ω–∏—Ç—å/–æ—Ç–º–µ–Ω–∞)
        save_btn = QPushButton('üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å')
        save_btn.clicked.connect(self.save_template)
        buttons_layout.addWidget(save_btn)
        
        cancel_btn = QPushButton('–û—Ç–º–µ–Ω–∞')
        cancel_btn.clicked.connect(self.reject)
        buttons_layout.addWidget(cancel_btn)
        
        layout.addLayout(buttons_layout)
    
    def load_template(self):
        """–ó–∞–≥—Ä—É–∑–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —à–∞–±–ª–æ–Ω–∞"""
        self.name_edit.setText(self.template.name)
        self.description_edit.setText(self.template.description or '')
        self.type_combo.setCurrentText(self.template.template_type)
        self.content_edit.setPlainText(self.template.content)
    
    def update_preview(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ preview (–ø—Ä–æ—Å—Ç–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –±–µ–∑ markdown —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞)"""
        content = self.content_edit.toPlainText()
        # –ü—Ä–æ—Å—Ç–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –±–µ–∑ markdown –ø–∞—Ä—Å–∏–Ω–≥–∞
        self.preview_text.setPlainText(content)
    
    def insert_example(self):
        """–í—Å—Ç–∞–≤–∫–∞ –ø—Ä–∏–º–µ—Ä–∞ —à–∞–±–ª–æ–Ω–∞"""
        example = """# –¢–µ—Å—Ç-–ø–ª–∞–Ω —Å–ø—Ä–∏–Ω—Ç–∞ {{milestone_name}}

> –î–∞—Ç–∞: {{date}}
> QA Lead: {{qa_name}}

## 1. –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –≤ —Ä–µ–ª–∏–∑–µ

{{feature_list}}

## 2. –ó–∞–¥–∞—á–∏ —Å–ø—Ä–∏–Ω—Ç–∞

| ID | –ó–∞–¥–∞—á–∞ | –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç | QA | Status |
|----|--------|-----------|-----|--------|
{{task_table}}

## 3. –í–∏–¥—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

- [ ] Smoke —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
- [ ] –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
- [ ] –†–µ–≥—Ä–µ—Å—Å–∏–æ–Ω–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
- [ ] Performance —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ

## 4. –û–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—ã–µ –¥–µ—Ñ–µ–∫—Ç—ã

{{bug_list}}

## 5. –ú–µ—Ç—Ä–∏–∫–∏

- –í—Å–µ–≥–æ –∑–∞–¥–∞—á: {{task_count}}
- –ù–∞–π–¥–µ–Ω–æ –±–∞–≥–æ–≤: {{bug_count}}
- –ü–æ–∫—Ä—ã—Ç–∏–µ: {{coverage}}%
"""
        self.content_edit.setPlainText(example)
    
    def save_template(self):
        """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞"""
        # –í–∞–ª–∏–¥–∞—Ü–∏—è
        name = self.name_edit.text().strip()
        if not name:
            QMessageBox.warning(self, '–û—à–∏–±–∫–∞', '–£–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞')
            return
        
        content = self.content_edit.toPlainText().strip()
        if not content:
            QMessageBox.warning(self, '–û—à–∏–±–∫–∞', '–ö–æ–Ω—Ç–µ–Ω—Ç —à–∞–±–ª–æ–Ω–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º')
            return
        
        try:
            from src.models.report_template import ReportTemplate
            
            if self.is_new:
                # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —à–∞–±–ª–æ–Ω–∞
                self.template = ReportTemplate(
                    name=name,
                    description=self.description_edit.text().strip() or None,
                    content=content,
                    template_type=self.type_combo.currentText()
                )
                self.session.add(self.template)
            else:
                # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ
                self.template.name = name
                self.template.description = self.description_edit.text().strip() or None
                self.template.content = content
                self.template.template_type = self.type_combo.currentText()
            
            self.session.commit()
            QMessageBox.information(self, '–£—Å–ø–µ—Ö', f'‚úÖ –®–∞–±–ª–æ–Ω "{name}" —Å–æ—Ö—Ä–∞–Ω—ë–Ω')
            self.accept()
            
        except Exception as e:
            self.session.rollback()
            logger.error(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–∞: {e}")
            QMessageBox.critical(self, '–û—à–∏–±–∫–∞', f'–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —à–∞–±–ª–æ–Ω:\n{e}')


class TemplateManagerDialog(QDialog):
    """–ú–µ–Ω–µ–¥–∂–µ—Ä —à–∞–±–ª–æ–Ω–æ–≤ –æ—Ç—á—ë—Ç–æ–≤"""
    
    def __init__(self, session, parent=None):
        super().__init__(parent)
        self.session = session
        
        self.setWindowTitle('–ú–µ–Ω–µ–¥–∂–µ—Ä —à–∞–±–ª–æ–Ω–æ–≤ –æ—Ç—á—ë—Ç–æ–≤')
        self.setMinimumWidth(800)
        self.setMinimumHeight(600)
        
        self.init_ui()
        self.load_templates()
    
    def init_ui(self):
        layout = QVBoxLayout(self)
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        info_label = QLabel(
            'üìã <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞–º–∏ –æ—Ç—á—ë—Ç–æ–≤</b><br>'
            '–°–æ–∑–¥–∞–≤–∞–π—Ç–µ –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ markdown —à–∞–±–ª–æ–Ω—ã –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ—Å—Ç-–ø–ª–∞–Ω–æ–≤ –∏ –æ—Ç—á—ë—Ç–æ–≤.'
        )
        info_label.setWordWrap(True)
        layout.addWidget(info_label)
        
        # –¢–∞–±–ª–∏—Ü–∞ —à–∞–±–ª–æ–Ω–æ–≤
        self.table = QTableWidget()
        self.table.setColumnCount(5)
        self.table.setHorizontalHeaderLabels(['–ù–∞–∑–≤–∞–Ω–∏–µ', '–¢–∏–ø', '–û–ø–∏—Å–∞–Ω–∏–µ', '–ê–∫—Ç–∏–≤–µ–Ω', '–û–±–Ω–æ–≤–ª—ë–Ω'])
        self.table.setSelectionBehavior(QTableWidget.SelectionBehavior.SelectRows)
        self.table.setEditTriggers(QTableWidget.EditTrigger.NoEditTriggers)
        self.table.doubleClicked.connect(self.edit_template)
        layout.addWidget(self.table)
        
        # –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
        buttons_layout = QHBoxLayout()
        
        add_btn = QPushButton('‚ûï –°–æ–∑–¥–∞—Ç—å')
        add_btn.clicked.connect(self.add_template)
        buttons_layout.addWidget(add_btn)
        
        edit_btn = QPushButton('‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å')
        edit_btn.clicked.connect(self.edit_template)
        buttons_layout.addWidget(edit_btn)
        
        delete_btn = QPushButton('üóëÔ∏è –£–¥–∞–ª–∏—Ç—å')
        delete_btn.clicked.connect(self.delete_template)
        buttons_layout.addWidget(delete_btn)
        
        buttons_layout.addStretch()
        
        close_btn = QPushButton('–ó–∞–∫—Ä—ã—Ç—å')
        close_btn.clicked.connect(self.accept)
        buttons_layout.addWidget(close_btn)
        
        layout.addLayout(buttons_layout)
    
    def load_templates(self):
        """–ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ —à–∞–±–ª–æ–Ω–æ–≤"""
        from src.models.report_template import ReportTemplate
        
        templates = self.session.query(ReportTemplate).order_by(ReportTemplate.created_at.desc()).all()
        
        self.table.setRowCount(len(templates))
        for row, template in enumerate(templates):
            self.table.setItem(row, 0, QTableWidgetItem(template.name))
            self.table.setItem(row, 1, QTableWidgetItem(template.template_type))
            self.table.setItem(row, 2, QTableWidgetItem(template.description or ''))
            self.table.setItem(row, 3, QTableWidgetItem('‚úì' if template.is_active else ''))
            
            updated = template.updated_at.strftime('%Y-%m-%d %H:%M') if template.updated_at else ''
            self.table.setItem(row, 4, QTableWidgetItem(updated))
        
        self.table.resizeColumnsToContents()
    
    def add_template(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —à–∞–±–ª–æ–Ω–∞"""
        dialog = TemplateEditorDialog(self.session, parent=self)
        if dialog.exec():
            self.load_templates()
    
    def edit_template(self):
        """–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —à–∞–±–ª–æ–Ω–∞"""
        from src.models.report_template import ReportTemplate
        
        selected = self.table.currentRow()
        if selected < 0:
            QMessageBox.warning(self, '–í–Ω–∏–º–∞–Ω–∏–µ', '–í—ã–±–µ—Ä–∏—Ç–µ —à–∞–±–ª–æ–Ω –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è')
            return
        
        template_name = self.table.item(selected, 0).text()
        template = self.session.query(ReportTemplate).filter_by(name=template_name).first()
        
        if template:
            dialog = TemplateEditorDialog(self.session, template, parent=self)
            if dialog.exec():
                self.load_templates()
    
    def delete_template(self):
        """–£–¥–∞–ª–µ–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞"""
        from src.models.report_template import ReportTemplate
        
        selected = self.table.currentRow()
        if selected < 0:
            QMessageBox.warning(self, '–í–Ω–∏–º–∞–Ω–∏–µ', '–í—ã–±–µ—Ä–∏—Ç–µ —à–∞–±–ª–æ–Ω –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è')
            return
        
        template_name = self.table.item(selected, 0).text()
        
        reply = QMessageBox.question(
            self,
            '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ',
            f'–£–¥–∞–ª–∏—Ç—å —à–∞–±–ª–æ–Ω "{template_name}"?',
            QMessageBox.StandardButton.Yes | QMessageBox.StandardButton.No
        )
        
        if reply == QMessageBox.StandardButton.Yes:
            try:
                template = self.session.query(ReportTemplate).filter_by(name=template_name).first()
                if template:
                    self.session.delete(template)
                    self.session.commit()
                    self.load_templates()
                    QMessageBox.information(self, '–£—Å–ø–µ—Ö', f'‚úÖ –®–∞–±–ª–æ–Ω "{template_name}" —É–¥–∞–ª—ë–Ω')
            except Exception as e:
                self.session.rollback()
                logger.error(f"–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–∞: {e}")
                QMessageBox.critical(self, '–û—à–∏–±–∫–∞', f'–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å:\n{e}')
