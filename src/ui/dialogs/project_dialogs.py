"""
Project Management Dialogs

- ProjectSelectorDialog: –í—ã–±–æ—Ä –ø—Ä–æ–µ–∫—Ç–∞
- NewProjectDialog: –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
- ProjectSettingsDialog: –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞
"""

from PyQt6.QtWidgets import *
from PyQt6.QtCore import Qt, pyqtSignal
from PyQt6.QtGui import QFont
from pathlib import Path
from typing import Optional
import re
import logging

logger = logging.getLogger(__name__)


class ProjectSelectorDialog(QDialog):
    """–î–∏–∞–ª–æ–≥ –≤—ã–±–æ—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞"""
    
    project_selected = pyqtSignal(str)  # project_id
    
    def __init__(self, project_manager, parent=None):
        super().__init__(parent)
        self.project_manager = project_manager
        self.selected_project_id = None
        
        self.setWindowTitle('–í—ã–±–æ—Ä –ø—Ä–æ–µ–∫—Ç–∞')
        self.setMinimumWidth(600)
        self.setMinimumHeight(500)
        
        self.init_ui()
        self.load_projects()
    
    def init_ui(self):
        layout = QVBoxLayout(self)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title = QLabel('–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã')
        title_font = QFont()
        title_font.setPointSize(12)
        title_font.setBold(True)
        title.setFont(title_font)
        layout.addWidget(title)
        
        # –ü–æ–∏—Å–∫
        search_layout = QHBoxLayout()
        search_layout.addWidget(QLabel('üîç'))
        self.search_input = QLineEdit()
        self.search_input.setPlaceholderText('–ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∏–ª–∏ –æ–ø–∏—Å–∞–Ω–∏—é...')
        self.search_input.textChanged.connect(self.filter_projects)
        search_layout.addWidget(self.search_input)
        layout.addLayout(search_layout)
        
        # –°–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤
        self.projects_list = QListWidget()
        self.projects_list.setAlternatingRowColors(True)
        self.projects_list.itemDoubleClicked.connect(self.on_project_double_click)
        self.projects_list.itemSelectionChanged.connect(self.on_selection_changed)
        layout.addWidget(self.projects_list)
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ
        info_group = QGroupBox('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ')
        info_layout = QFormLayout(info_group)
        
        self.info_name = QLabel('-')
        self.info_description = QLabel('-')
        self.info_description.setWordWrap(True)
        self.info_profile = QLabel('-')
        self.info_last_used = QLabel('-')
        self.info_db_size = QLabel('-')
        
        info_layout.addRow('–ù–∞–∑–≤–∞–Ω–∏–µ:', self.info_name)
        info_layout.addRow('–û–ø–∏—Å–∞–Ω–∏–µ:', self.info_description)
        info_layout.addRow('–ü—Ä–æ—Ñ–∏–ª—å:', self.info_profile)
        info_layout.addRow('–ü–æ—Å–ª–µ–¥–Ω–µ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:', self.info_last_used)
        info_layout.addRow('–†–∞–∑–º–µ—Ä –ë–î:', self.info_db_size)
        
        layout.addWidget(info_group)
        
        # –ö–Ω–æ–ø–∫–∏
        buttons_layout = QHBoxLayout()
        
        new_project_btn = QPushButton('‚ûï –ù–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç')
        new_project_btn.clicked.connect(self.create_new_project)
        buttons_layout.addWidget(new_project_btn)
        
        self.delete_btn = QPushButton('üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –ø—Ä–æ–µ–∫—Ç')
        self.delete_btn.setEnabled(False)
        self.delete_btn.clicked.connect(self.delete_project)
        self.delete_btn.setStyleSheet('color: #d32f2f;')
        buttons_layout.addWidget(self.delete_btn)
        
        buttons_layout.addStretch()
        
        self.select_btn = QPushButton('–í—ã–±—Ä–∞—Ç—å')
        self.select_btn.setEnabled(False)
        self.select_btn.clicked.connect(self.accept)
        buttons_layout.addWidget(self.select_btn)
        
        cancel_btn = QPushButton('–û—Ç–º–µ–Ω–∞')
        cancel_btn.clicked.connect(self.reject)
        buttons_layout.addWidget(cancel_btn)
        
        layout.addLayout(buttons_layout)
    
    def load_projects(self):
        """–ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤"""
        self.projects_list.clear()
        
        projects = self.project_manager.list_projects()
        
        # –°–æ—Ä—Ç–∏—Ä—É–µ–º: —Å–Ω–∞—á–∞–ª–∞ –∞–∫—Ç–∏–≤–Ω—ã–µ, –ø–æ—Ç–æ–º –ø–æ last_used
        active_projects = [p for p in projects if p.is_active]
        active_projects.sort(key=lambda p: p.last_used or '0', reverse=True)
        
        for project in active_projects:
            # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞
            profile_emoji = 'üè≠' if project.settings_profile == 'production' else 'üß™'
            
            item_text = f"{profile_emoji} {project.name}"
            if project.last_used:
                from datetime import datetime
                try:
                    last_used = datetime.fromisoformat(project.last_used)
                    time_ago = self.get_time_ago(last_used)
                    item_text += f" (–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª—Å—è {time_ago})"
                except:
                    pass
            
            item = QListWidgetItem(item_text)
            item.setData(Qt.ItemDataRole.UserRole, project.id)
            self.projects_list.addItem(item)
        
        # –ê–≤—Ç–æ–≤—ã–±–æ—Ä —Ç–µ–∫—É—â–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
        current_project = self.project_manager.get_current_project()
        if current_project:
            for i in range(self.projects_list.count()):
                item = self.projects_list.item(i)
                if item.data(Qt.ItemDataRole.UserRole) == current_project.id:
                    self.projects_list.setCurrentItem(item)
                    break
    
    def filter_projects(self):
        """–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–æ–≤ –ø–æ –ø–æ–∏—Å–∫–æ–≤–æ–º—É –∑–∞–ø—Ä–æ—Å—É"""
        search_text = self.search_input.text().lower()
        
        for i in range(self.projects_list.count()):
            item = self.projects_list.item(i)
            project_id = item.data(Qt.ItemDataRole.UserRole)
            project = self.project_manager.projects.get(project_id)
            
            if project:
                match = (
                    search_text in project.name.lower() or
                    search_text in (project.description or '').lower() or
                    search_text in project_id.lower()
                )
                item.setHidden(not match)
    
    def on_selection_changed(self):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤—ã–±–æ—Ä–∞"""
        selected_items = self.projects_list.selectedItems()
        
        if not selected_items:
            self.select_btn.setEnabled(False)
            self.delete_btn.setEnabled(False)
            self.clear_info()
            return
        
        self.select_btn.setEnabled(True)
        self.delete_btn.setEnabled(True)
        
        item = selected_items[0]
        project_id = item.data(Qt.ItemDataRole.UserRole)
        project = self.project_manager.projects.get(project_id)
        
        if project:
            self.selected_project_id = project_id
            self.show_project_info(project)
    
    def show_project_info(self, project):
        """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–µ–∫—Ç–µ"""
        self.info_name.setText(project.name)
        self.info_description.setText(project.description or '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è')
        
        profile_name = {
            'production': 'üè≠ Production',
            'sandbox': 'üß™ Sandbox',
            'custom': '‚öôÔ∏è Custom'
        }.get(project.settings_profile, project.settings_profile)
        self.info_profile.setText(profile_name)
        
        if project.last_used:
            from datetime import datetime
            try:
                last_used = datetime.fromisoformat(project.last_used)
                self.info_last_used.setText(last_used.strftime('%Y-%m-%d %H:%M:%S'))
            except:
                self.info_last_used.setText('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
        else:
            self.info_last_used.setText('–ù–∏–∫–æ–≥–¥–∞')
        
        # –†–∞–∑–º–µ—Ä –ë–î
        if project.database_path.exists():
            size_bytes = project.database_path.stat().st_size
            size_mb = size_bytes / (1024 * 1024)
            self.info_db_size.setText(f'{size_mb:.2f} MB')
        else:
            self.info_db_size.setText('–ë–î –Ω–µ –Ω–∞–π–¥–µ–Ω–∞')
    
    def clear_info(self):
        """–û—á–∏—Å—Ç–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é"""
        self.info_name.setText('-')
        self.info_description.setText('-')
        self.info_profile.setText('-')
        self.info_last_used.setText('-')
        self.info_db_size.setText('-')
    
    def on_project_double_click(self, item):
        """–î–≤–æ–π–Ω–æ–π –∫–ª–∏–∫ - –≤—ã–±–æ—Ä –ø—Ä–æ–µ–∫—Ç–∞"""
        self.accept()
    
    def delete_project(self):
        """–£–¥–∞–ª–∏—Ç—å –ø—Ä–æ–µ–∫—Ç"""
        if not self.selected_project_id:
            return
        
        project = self.project_manager.projects.get(self.selected_project_id)
        if not project:
            return
        
        reply = QMessageBox.question(
            self, '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —É–¥–∞–ª–µ–Ω–∏–µ',
            f'–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –ø—Ä–æ–µ–∫—Ç "{project.name}"?\n\n'
            '‚ö†Ô∏è –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å!\n'
            '–ë—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã: –ë–î, –æ—Ç—á—ë—Ç—ã, BDD —Ñ–∏—á–∏.',
            QMessageBox.StandardButton.Yes | QMessageBox.StandardButton.No,
            QMessageBox.StandardButton.No
        )
        
        if reply != QMessageBox.StandardButton.Yes:
            return
        
        try:
            import shutil
            del self.project_manager.projects[self.selected_project_id]
            self.project_manager.save()
            
            project_dir = project.database_path.parent
            if project_dir.exists():
                shutil.rmtree(project_dir)
            
            logger.info(f"‚úÖ –ü—Ä–æ–µ–∫—Ç {self.selected_project_id} —É–¥–∞–ª—ë–Ω")
            QMessageBox.information(self, '–£—Å–ø–µ—Ö', f'‚úÖ –ü—Ä–æ–µ–∫—Ç "{project.name}" —É–¥–∞–ª—ë–Ω')
            
            self.selected_project_id = None
            self.load_projects()
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: {e}", exc_info=True)
            QMessageBox.critical(self, '–û—à–∏–±–∫–∞', f'–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å:\n{e}')
    
    def create_new_project(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞"""
        dialog = NewProjectDialog(self.project_manager, self)
        if dialog.exec():
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫
            self.load_projects()
            # –ê–≤—Ç–æ–≤—ã–±–∏—Ä–∞–µ–º –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç
            new_project_id = dialog.created_project_id
            for i in range(self.projects_list.count()):
                item = self.projects_list.item(i)
                if item.data(Qt.ItemDataRole.UserRole) == new_project_id:
                    self.projects_list.setCurrentItem(item)
                    break
    
    @staticmethod
    def get_time_ago(dt) -> str:
        """–ü–æ–ª—É—á–∏—Ç—å —Å—Ç—Ä–æ–∫—É 'X –Ω–∞–∑–∞–¥'"""
        from datetime import datetime, timedelta
        now = datetime.now()
        delta = now - dt
        
        if delta < timedelta(minutes=1):
            return '—Ç–æ–ª—å–∫–æ —á—Ç–æ'
        elif delta < timedelta(hours=1):
            minutes = int(delta.total_seconds() / 60)
            return f'{minutes} –º–∏–Ω –Ω–∞–∑–∞–¥'
        elif delta < timedelta(days=1):
            hours = int(delta.total_seconds() / 3600)
            return f'{hours} —á –Ω–∞–∑–∞–¥'
        elif delta < timedelta(days=7):
            days = delta.days
            return f'{days} –¥–Ω –Ω–∞–∑–∞–¥'
        elif delta < timedelta(days=30):
            weeks = delta.days // 7
            return f'{weeks} –Ω–µ–¥ –Ω–∞–∑–∞–¥'
        else:
            months = delta.days // 30
            return f'{months} –º–µ—Å –Ω–∞–∑–∞–¥'


class NewProjectDialog(QDialog):
    """–î–∏–∞–ª–æ–≥ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞"""
    
    def __init__(self, project_manager, parent=None):
        super().__init__(parent)
        self.project_manager = project_manager
        self.created_project_id = None
        
        self.setWindowTitle('–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞')
        self.setMinimumWidth(500)
        
        self.init_ui()
    
    def init_ui(self):
        layout = QVBoxLayout(self)
        
        # –§–æ—Ä–º–∞
        form = QFormLayout()
        
        # –ù–∞–∑–≤–∞–Ω–∏–µ
        self.name_edit = QLineEdit()
        self.name_edit.setPlaceholderText('–ù–∞–ø—Ä–∏–º–µ—Ä: Project B')
        self.name_edit.textChanged.connect(self.on_name_changed)
        form.addRow('* –ù–∞–∑–≤–∞–Ω–∏–µ:', self.name_edit)
        
        # ID (–∞–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è)
        self.id_edit = QLineEdit()
        self.id_edit.setPlaceholderText('–ê–≤—Ç–æ–≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è –∏–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')
        id_hint = QLabel('<i>–ú–æ–∂–Ω–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å. –†–∞–∑—Ä–µ—à–µ–Ω—ã: a-z, 0-9, _, -</i>')
        id_hint.setStyleSheet('color: gray; font-size: 9pt;')
        form.addRow('* ID –ø—Ä–æ–µ–∫—Ç–∞:', self.id_edit)
        form.addRow('', id_hint)
        
        # –û–ø–∏—Å–∞–Ω–∏–µ
        self.description_edit = QTextEdit()
        self.description_edit.setMaximumHeight(80)
        self.description_edit.setPlaceholderText('–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞')
        form.addRow('–û–ø–∏—Å–∞–Ω–∏–µ:', self.description_edit)
        
        # –ü—Ä–æ—Ñ–∏–ª—å
        self.profile_combo = QComboBox()
        profiles = self.project_manager.profiles.values()
        for profile in profiles:
            emoji = 'üè≠' if profile.id == 'production' else 'üß™'
            self.profile_combo.addItem(f'{emoji} {profile.name} - {profile.description}', profile.id)
        
        # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é production
        default_idx = self.profile_combo.findData('production')
        if default_idx >= 0:
            self.profile_combo.setCurrentIndex(default_idx)
        
        form.addRow('–ü—Ä–æ—Ñ–∏–ª—å –Ω–∞—Å—Ç—Ä–æ–µ–∫:', self.profile_combo)
        
        # –¢–µ–≥–∏
        self.tags_edit = QLineEdit()
        self.tags_edit.setPlaceholderText('work, active (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é)')
        form.addRow('–¢–µ–≥–∏:', self.tags_edit)
        
        layout.addLayout(form)
        
        # –ö–Ω–æ–ø–∫–∏
        buttons = QDialogButtonBox(
            QDialogButtonBox.StandardButton.Ok |
            QDialogButtonBox.StandardButton.Cancel
        )
        buttons.accepted.connect(self.create_project)
        buttons.rejected.connect(self.reject)
        buttons.button(QDialogButtonBox.StandardButton.Ok).setText('–°–æ–∑–¥–∞—Ç—å')
        buttons.button(QDialogButtonBox.StandardButton.Cancel).setText('–û—Ç–º–µ–Ω–∞')
        layout.addWidget(buttons)
    
    def on_name_changed(self, text):
        """–ê–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è ID –∏–∑ –Ω–∞–∑–≤–∞–Ω–∏—è"""
        if not text:
            self.id_edit.clear()
            return
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º slug
        slug = text.lower()
        slug = re.sub(r'[^\w\s-]', '', slug)
        slug = re.sub(r'[\s_-]+', '_', slug)
        slug = slug.strip('_-')
        
        self.id_edit.setText(slug)
    
    def create_project(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞"""
        # –í–∞–ª–∏–¥–∞—Ü–∏—è
        name = self.name_edit.text().strip()
        project_id = self.id_edit.text().strip()
        
        if not name:
            QMessageBox.warning(self, '–û—à–∏–±–∫–∞', '–£–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞')
            return
        
        if not project_id:
            QMessageBox.warning(self, '–û—à–∏–±–∫–∞', '–£–∫–∞–∂–∏—Ç–µ ID –ø—Ä–æ–µ–∫—Ç–∞')
            return
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ ID
        if not re.match(r'^[a-z0-9_-]+$', project_id):
            QMessageBox.warning(
                self, '–û—à–∏–±–∫–∞',
                'ID –ø—Ä–æ–µ–∫—Ç–∞ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ: a-z, 0-9, _, -'
            )
            return
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏
        if project_id in self.project_manager.projects:
            QMessageBox.warning(self, '–û—à–∏–±–∫–∞', f'–ü—Ä–æ–µ–∫—Ç —Å ID "{project_id}" —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')
            return
        
        description = self.description_edit.toPlainText().strip()
        profile_id = self.profile_combo.currentData()
        tags_text = self.tags_edit.text().strip()
        tags = [t.strip() for t in tags_text.split(',') if t.strip()] if tags_text else []
        
        project = None
        db_path = None
        
        try:
            # –°–æ–∑–¥–∞—ë–º –ø—Ä–æ–µ–∫—Ç
            project = self.project_manager.create_project(
                project_id=project_id,
                name=name,
                description=description,
                settings_profile=profile_id
            )
            
            project.tags = tags
            self.project_manager.save()
            
            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ë–î
            from src.db.database_manager import get_database_manager
            db_manager = get_database_manager()
            db_path = project.database_path
            db_manager.connect_to_database(db_path)
            db_manager.init_database()
            
            # –°–æ–∑–¥–∞—ë–º –¥–µ—Ñ–æ–ª—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            from src.models.user import User
            session = db_manager.get_session()
            try:
                default_user = User(
                    name='Default User',
                    position='QA',
                    email='user@example.com',
                    is_active=1
                )
                session.add(default_user)
                session.commit()
            finally:
                session.close()
            
            self.created_project_id = project_id
            
            QMessageBox.information(
                self, '–£—Å–ø–µ—Ö',
                f'‚úÖ –ü—Ä–æ–µ–∫—Ç "{name}" —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!\n\n–ú–æ–∂–Ω–æ –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É.'
            )
            
            self.accept()
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞: {e}", exc_info=True)
            
            # –û—Ç–∫–∞—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π
            if project:
                logger.info(f"üîÑ –û—Ç–∫–∞—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞ {project_id}...")
                try:
                    # –£–¥–∞–ª—è–µ–º –∏–∑ projects.json
                    if project_id in self.project_manager.projects:
                        del self.project_manager.projects[project_id]
                        self.project_manager.save()
                    
                    # –£–¥–∞–ª—è–µ–º –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞
                    if db_path:
                        import shutil
                        project_dir = db_path.parent
                        if project_dir.exists():
                            shutil.rmtree(project_dir)
                            logger.info(f"‚úÖ –ü–∞–ø–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ —É–¥–∞–ª–µ–Ω–∞: {project_dir}")
                    
                    logger.info("‚úÖ –û—Ç–∫–∞—Ç –∑–∞–≤–µ—Ä—à—ë–Ω")
                except Exception as rollback_error:
                    logger.error(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—Ç–∫–∞—Ç–∞: {rollback_error}")
            
            QMessageBox.critical(self, '–û—à–∏–±–∫–∞', f'–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç:\n{e}\n\n–ò–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç–º–µ–Ω–µ–Ω—ã.')


class ProjectSettingsDialog(QDialog):
    """–î–∏–∞–ª–æ–≥ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–æ–µ–∫—Ç–∞"""
    
    def __init__(self, project_manager, project_id, parent=None):
        super().__init__(parent)
        self.project_manager = project_manager
        self.project = project_manager.projects.get(project_id)
        
        if not self.project:
            raise ValueError(f'–ü—Ä–æ–µ–∫—Ç "{project_id}" –Ω–µ –Ω–∞–π–¥–µ–Ω')
        
        self.setWindowTitle(f'–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞: {self.project.name}')
        self.setMinimumWidth(500)
        
        self.init_ui()
    
    def init_ui(self):
        layout = QVBoxLayout(self)
        
        # –§–æ—Ä–º–∞
        form = QFormLayout()
        
        # –ù–∞–∑–≤–∞–Ω–∏–µ
        self.name_edit = QLineEdit(self.project.name)
        form.addRow('–ù–∞–∑–≤–∞–Ω–∏–µ:', self.name_edit)
        
        # ID (readonly)
        id_label = QLabel(self.project.id)
        id_label.setStyleSheet('color: gray;')
        form.addRow('ID:', id_label)
        
        # –û–ø–∏—Å–∞–Ω–∏–µ
        self.description_edit = QTextEdit(self.project.description or '')
        self.description_edit.setMaximumHeight(80)
        form.addRow('–û–ø–∏—Å–∞–Ω–∏–µ:', self.description_edit)
        
        # –ü—Ä–æ—Ñ–∏–ª—å
        self.profile_combo = QComboBox()
        profiles = self.project_manager.profiles.values()
        for profile in profiles:
            emoji = 'üè≠' if profile.id == 'production' else 'üß™'
            self.profile_combo.addItem(f'{emoji} {profile.name}', profile.id)
        
        current_idx = self.profile_combo.findData(self.project.settings_profile)
        if current_idx >= 0:
            self.profile_combo.setCurrentIndex(current_idx)
        
        form.addRow('–ü—Ä–æ—Ñ–∏–ª—å:', self.profile_combo)
        
        # –¢–µ–≥–∏
        self.tags_edit = QLineEdit(', '.join(self.project.tags))
        form.addRow('–¢–µ–≥–∏:', self.tags_edit)
        
        # –ê–∫—Ç–∏–≤–µ–Ω
        self.active_check = QCheckBox()
        self.active_check.setChecked(self.project.is_active)
        form.addRow('–ê–∫—Ç–∏–≤–µ–Ω:', self.active_check)
        
        layout.addLayout(form)
        
        # –ö–Ω–æ–ø–∫–∏
        buttons = QDialogButtonBox(
            QDialogButtonBox.StandardButton.Save |
            QDialogButtonBox.StandardButton.Cancel
        )
        buttons.accepted.connect(self.save_settings)
        buttons.rejected.connect(self.reject)
        buttons.button(QDialogButtonBox.StandardButton.Save).setText('üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å')
        buttons.button(QDialogButtonBox.StandardButton.Cancel).setText('–û—Ç–º–µ–Ω–∞')
        layout.addWidget(buttons)
    
    def save_settings(self):
        """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
        name = self.name_edit.text().strip()
        
        if not name:
            QMessageBox.warning(self, '–û—à–∏–±–∫–∞', '–£–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞')
            return
        
        self.project.name = name
        self.project.description = self.description_edit.toPlainText().strip() or None
        self.project.settings_profile = self.profile_combo.currentData()
        
        tags_text = self.tags_edit.text().strip()
        self.project.tags = [t.strip() for t in tags_text.split(',') if t.strip()] if tags_text else []
        
        self.project.is_active = self.active_check.isChecked()
        
        self.project_manager.save()
        
        QMessageBox.information(self, '–£—Å–ø–µ—Ö', '‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã')
        self.accept()
