"""
Dictionary Manager - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞–º–∏

–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤ —Å–∏—Å—Ç–µ–º—ã: —Ç–∏–ø—ã —ç–ª–µ–º–µ–Ω—Ç–æ–≤, —Å–µ–≥–º–µ–Ω—Ç—ã, —Å—Ç–∞—Ç—É—Å—ã –∏ —Ç.–¥.
"""

from PyQt6.QtWidgets import *
from PyQt6.QtCore import Qt
from PyQt6.QtGui import QAction
from src.db import SessionLocal
from src.models import Dictionary


class DictionaryEditDialog(QDialog):
    """–î–∏–∞–ª–æ–≥ —Å–æ–∑–¥–∞–Ω–∏—è/—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞"""
    
    DICT_TYPES = {
        'type': '–¢–∏–ø —ç–ª–µ–º–µ–Ω—Ç–∞',
        'segment': '–°–µ–≥–º–µ–Ω—Ç',
        'automation_status': '–°—Ç–∞—Ç—É—Å –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏',
        'maturity': '–£—Ä–æ–≤–µ–Ω—å –∑—Ä–µ–ª–æ—Å—Ç–∏',
        'position': '–î–æ–ª–∂–Ω–æ—Å—Ç—å'
    }
    
    def __init__(self, dict_item=None, dict_type=None, parent=None):
        super().__init__(parent)
        self.dict_item = dict_item if dict_item else Dictionary()
        self.is_new = dict_item is None
        
        if self.is_new and dict_type:
            self.dict_item.dict_type = dict_type
        
        title = '–ù–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç' if self.is_new else f'–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: {dict_item.value}'
        self.setWindowTitle(title)
        self.setMinimumWidth(500)
        self.init_ui()
    
    def init_ui(self):
        layout = QFormLayout(self)
        
        # –¢–∏–ø —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞
        self.type_combo = QComboBox()
        for key, label in self.DICT_TYPES.items():
            self.type_combo.addItem(label, key)
        
        if self.dict_item.dict_type:
            index = self.type_combo.findData(self.dict_item.dict_type)
            if index >= 0:
                self.type_combo.setCurrentIndex(index)
        
        self.type_combo.setEnabled(self.is_new)  # –¢–∏–ø –Ω–µ–ª—å–∑—è –º–µ–Ω—è—Ç—å –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è
        
        # –ó–Ω–∞—á–µ–Ω–∏–µ
        self.value_edit = QLineEdit(self.dict_item.value or '')
        
        # –ü–æ—Ä—è–¥–æ–∫ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        self.order_spin = QSpinBox()
        self.order_spin.setRange(0, 999)
        self.order_spin.setValue(self.dict_item.display_order or 0)
        
        # –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
        self.active_check = QCheckBox()
        self.active_check.setChecked(bool(self.dict_item.is_active if hasattr(self.dict_item, 'is_active') else True))
        
        # –û–ø–∏—Å–∞–Ω–∏–µ
        self.desc_edit = QTextEdit(self.dict_item.description or '')
        self.desc_edit.setMaximumHeight(80)
        
        layout.addRow('* –¢–∏–ø —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞:', self.type_combo)
        layout.addRow('* –ó–Ω–∞—á–µ–Ω–∏–µ:', self.value_edit)
        layout.addRow('–ü–æ—Ä—è–¥–æ–∫:', self.order_spin)
        layout.addRow('–ê–∫—Ç–∏–≤–µ–Ω:', self.active_check)
        layout.addRow('–û–ø–∏—Å–∞–Ω–∏–µ:', self.desc_edit)
        
        # –ö–Ω–æ–ø–∫–∏
        buttons = QDialogButtonBox(QDialogButtonBox.StandardButton.Save | QDialogButtonBox.StandardButton.Cancel)
        buttons.accepted.connect(self.save)
        buttons.rejected.connect(self.reject)
        layout.addRow(buttons)
    
    def save(self):
        value = self.value_edit.text().strip()
        if not value:
            QMessageBox.warning(self, '–û—à–∏–±–∫–∞', '–ó–Ω–∞—á–µ–Ω–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è')
            return
        
        self.dict_item.dict_type = self.type_combo.currentData()
        self.dict_item.value = value
        self.dict_item.display_order = self.order_spin.value()
        self.dict_item.is_active = self.active_check.isChecked()
        self.dict_item.description = self.desc_edit.toPlainText().strip() or None
        
        self.accept()


class DictionaryManagerWindow(QMainWindow):
    """–ì–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞–º–∏"""
    
    def __init__(self, parent=None):
        super().__init__(parent)
        self.session = SessionLocal()
        self.current_items = []
        self.current_dict_type = 'type'  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–∏–ø—ã
        self.init_ui()
        self.load_dictionaries()
    
    def init_ui(self):
        self.setWindowTitle('–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞–º–∏')
        self.setGeometry(200, 200, 1000, 600)
        
        # –ú–µ–Ω—é
        menubar = self.menuBar()
        file_menu = menubar.addMenu('–§–∞–π–ª')
        close_action = QAction('–ó–∞–∫—Ä—ã—Ç—å', self)
        close_action.triggered.connect(self.close)
        file_menu.addAction(close_action)
        
        # –¢—É–ª–±–∞—Ä
        toolbar = QToolBar('–ì–ª–∞–≤–Ω–∞—è')
        toolbar.setMovable(False)
        self.addToolBar(toolbar)
        
        refresh_action = QAction('üîÑ –û–±–Ω–æ–≤–∏—Ç—å', self)
        refresh_action.triggered.connect(self.load_dictionaries)
        toolbar.addAction(refresh_action)
        
        add_action = QAction('‚ûï –î–æ–±–∞–≤–∏—Ç—å', self)
        add_action.triggered.connect(self.add_item)
        toolbar.addAction(add_action)
        
        edit_action = QAction('‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å', self)
        edit_action.triggered.connect(self.edit_item)
        toolbar.addAction(edit_action)
        
        delete_action = QAction('üóëÔ∏è –£–¥–∞–ª–∏—Ç—å', self)
        delete_action.triggered.connect(self.delete_item)
        toolbar.addAction(delete_action)
        
        # –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –≤–∏–¥–∂–µ—Ç
        central_widget = QWidget()
        self.setCentralWidget(central_widget)
        layout = QVBoxLayout(central_widget)
        
        # –í—ã–±–æ—Ä —Ç–∏–ø–∞ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞
        type_layout = QHBoxLayout()
        type_layout.addWidget(QLabel('üìö –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫:'))
        
        self.type_combo = QComboBox()
        self.type_combo.addItem('–¢–∏–ø—ã —ç–ª–µ–º–µ–Ω—Ç–æ–≤', 'type')
        self.type_combo.addItem('–°–µ–≥–º–µ–Ω—Ç—ã', 'segment')
        self.type_combo.addItem('–°—Ç–∞—Ç—É—Å—ã –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏', 'automation_status')
        self.type_combo.addItem('–£—Ä–æ–≤–Ω–∏ –∑—Ä–µ–ª–æ—Å—Ç–∏', 'maturity')
        self.type_combo.addItem('–î–æ–ª–∂–Ω–æ—Å—Ç–∏', 'position')
        self.type_combo.currentIndexChanged.connect(self.on_type_changed)
        type_layout.addWidget(self.type_combo)
        type_layout.addStretch()
        
        layout.addLayout(type_layout)
        
        # –ü–æ–∏—Å–∫
        search_layout = QHBoxLayout()
        search_layout.addWidget(QLabel('üîç –ü–æ–∏—Å–∫:'))
        self.search_input = QLineEdit()
        self.search_input.setPlaceholderText('–ó–Ω–∞—á–µ–Ω–∏–µ, –æ–ø–∏—Å–∞–Ω–∏–µ...')
        self.search_input.textChanged.connect(self.filter_table)
        search_layout.addWidget(self.search_input)
        layout.addLayout(search_layout)
        
        # –¢–∞–±–ª–∏—Ü–∞
        self.table = QTableWidget()
        self.table.setColumnCount(6)
        self.table.setHorizontalHeaderLabels(['ID', '–¢–∏–ø', '–ó–Ω–∞—á–µ–Ω–∏–µ', '–ü–æ—Ä—è–¥–æ–∫', '–ê–∫—Ç–∏–≤–µ–Ω', '–û–ø–∏—Å–∞–Ω–∏–µ'])
        self.table.setSelectionBehavior(QTableWidget.SelectionBehavior.SelectRows)
        self.table.setEditTriggers(QTableWidget.EditTrigger.NoEditTriggers)
        self.table.doubleClicked.connect(self.edit_item)
        self.table.hideColumn(0)  # –°–∫—Ä—ã—Ç—å ID
        self.table.hideColumn(1)  # –°–∫—Ä—ã—Ç—å –¢–∏–ø (–º—ã —Ñ–∏–ª—å—Ç—Ä—É–µ–º –ø–æ –Ω–µ–º—É)
        layout.addWidget(self.table)
        
        # –°—Ç–∞—Ç—É—Å-–±–∞—Ä
        self.statusBar().showMessage('–ì–æ—Ç–æ–≤')
    
    def on_type_changed(self):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–∏–ø–∞ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞"""
        self.current_dict_type = self.type_combo.currentData()
        self.load_dictionaries()
    
    def load_dictionaries(self):
        """–ó–∞–≥—Ä—É–∑–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞ –∏–∑ –ë–î"""
        self.current_items = self.session.query(Dictionary).filter(
            Dictionary.dict_type == self.current_dict_type
        ).order_by(Dictionary.display_order, Dictionary.value).all()
        
        self.populate_table(self.current_items)
        self.statusBar().showMessage(f'‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ: {len(self.current_items)} —ç–ª–µ–º–µ–Ω—Ç–æ–≤')
    
    def populate_table(self, items):
        """–ó–∞–ø–æ–ª–Ω–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É –¥–∞–Ω–Ω—ã–º–∏"""
        self.table.setRowCount(len(items))
        for row_idx, item in enumerate(items):
            self.table.setItem(row_idx, 0, QTableWidgetItem(str(item.id)))
            self.table.setItem(row_idx, 1, QTableWidgetItem(item.dict_type or ''))
            self.table.setItem(row_idx, 2, QTableWidgetItem(item.value or ''))
            self.table.setItem(row_idx, 3, QTableWidgetItem(str(item.display_order)))
            self.table.setItem(row_idx, 4, QTableWidgetItem('‚úì' if item.is_active else '‚úó'))
            self.table.setItem(row_idx, 5, QTableWidgetItem(item.description or ''))
    
    def filter_table(self):
        """–§–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É –ø–æ –ø–æ–∏—Å–∫–æ–≤–æ–º—É –∑–∞–ø—Ä–æ—Å—É"""
        query = self.search_input.text().lower()
        if not query:
            self.populate_table(self.current_items)
            return
        
        filtered = [
            item for item in self.current_items
            if query in (item.value or '').lower() or query in (item.description or '').lower()
        ]
        self.populate_table(filtered)
        self.statusBar().showMessage(f'üîç –ù–∞–π–¥–µ–Ω–æ: {len(filtered)} –∏–∑ {len(self.current_items)}')
    
    def add_item(self):
        """–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç"""
        dialog = DictionaryEditDialog(dict_type=self.current_dict_type, parent=self)
        if dialog.exec() == QDialog.DialogCode.Accepted:
            try:
                self.session.add(dialog.dict_item)
                self.session.commit()
                self.load_dictionaries()
                self.statusBar().showMessage(f'‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ: {dialog.dict_item.value}')
            except Exception as e:
                self.session.rollback()
                QMessageBox.critical(self, '–û—à–∏–±–∫–∞', f'–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç:\n{e}')
    
    def edit_item(self):
        """–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç"""
        selected_rows = self.table.selectedIndexes()
        if not selected_rows:
            QMessageBox.warning(self, '–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', '–í—ã–±–µ—Ä–∏—Ç–µ —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è')
            return
        
        row = selected_rows[0].row()
        item_id = int(self.table.item(row, 0).text())
        item = self.session.query(Dictionary).get(item_id)
        
        if not item:
            QMessageBox.warning(self, '–û—à–∏–±–∫–∞', '–≠–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω')
            return
        
        dialog = DictionaryEditDialog(item, parent=self)
        if dialog.exec() == QDialog.DialogCode.Accepted:
            try:
                self.session.commit()
                self.load_dictionaries()
                self.statusBar().showMessage(f'‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ: {item.value}')
            except Exception as e:
                self.session.rollback()
                QMessageBox.critical(self, '–û—à–∏–±–∫–∞', f'–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å:\n{e}')
    
    def delete_item(self):
        """–£–¥–∞–ª–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç"""
        selected_rows = self.table.selectedIndexes()
        if not selected_rows:
            QMessageBox.warning(self, '–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', '–í—ã–±–µ—Ä–∏—Ç–µ —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è')
            return
        
        row = selected_rows[0].row()
        item_id = int(self.table.item(row, 0).text())
        item = self.session.query(Dictionary).get(item_id)
        
        if not item:
            QMessageBox.warning(self, '–û—à–∏–±–∫–∞', '–≠–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω')
            return
        
        reply = QMessageBox.question(
            self, '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ',
            f'–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å "{item.value}"?\n\n'
            f'‚ö†Ô∏è –≠—Ç–æ –º–æ–∂–µ—Ç –ø–æ–≤–ª–∏—è—Ç—å –Ω–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ!',
            QMessageBox.StandardButton.Yes | QMessageBox.StandardButton.No
        )
        
        if reply == QMessageBox.StandardButton.Yes:
            try:
                self.session.delete(item)
                self.session.commit()
                self.load_dictionaries()
                self.statusBar().showMessage(f'‚úÖ –£–¥–∞–ª–µ–Ω–æ: {item.value}')
            except Exception as e:
                self.session.rollback()
                QMessageBox.critical(self, '–û—à–∏–±–∫–∞', f'–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å:\n{e}')
    
    def closeEvent(self, event):
        """–ü—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –æ–∫–Ω–∞"""
        self.session.close()
        event.accept()
