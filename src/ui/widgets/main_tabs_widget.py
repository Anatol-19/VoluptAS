"""
–ì–ª–∞–≤–Ω—ã–π –≤–∏–¥–∂–µ—Ç —Å —Ç–∞–±–∞–º–∏ –¥–ª—è –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–π VoluptAS

–°–æ–¥–µ—Ä–∂–∏—Ç 5 —Ç–∞–±–æ–≤:
1. –¢–∞–±–ª–∏—Ü–∞ + –ú–∏–Ω–∏-–≥—Ä–∞—Ñ
2. –ë–æ–ª—å—à–æ–π –≥—Ä–∞—Ñ
3. BDD Features
4. –ú–∞—Ç—Ä–∏—Ü–∞ —Ç—Ä–∞—Å—Å–∏—Ä–æ–≤–æ–∫
5. INFRA Maturity
"""

from PyQt6.QtWidgets import QWidget, QTabWidget, QVBoxLayout
from PyQt6.QtCore import Qt, pyqtSignal
from PyQt6.QtGui import QIcon


class MainTabsWidget(QWidget):
    """
    –ì–ª–∞–≤–Ω—ã–π –≤–∏–¥–∂–µ—Ç —Å —Ç–∞–±–∞–º–∏
    
    Signals:
        tab_changed: –°–∏–≥–Ω–∞–ª –ø—Ä–∏ —Å–º–µ–Ω–µ —Ç–∞–±–∞ (–∏–Ω–¥–µ–∫—Å, –Ω–∞–∑–≤–∞–Ω–∏–µ)
        item_selected: –°–∏–≥–Ω–∞–ª –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —ç–ª–µ–º–µ–Ω—Ç–∞ (func_id)
    """
    
    tab_changed = pyqtSignal(int, str)  # –∏–Ω–¥–µ–∫—Å, –Ω–∞–∑–≤–∞–Ω–∏–µ
    item_selected = pyqtSignal(str)  # func_id
    
    # –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è –∏–Ω–¥–µ–∫—Å–æ–≤ —Ç–∞–±–æ–≤
    TAB_TABLE = 0
    TAB_GRAPH = 1
    TAB_BDD = 2
    TAB_COVERAGE = 3
    TAB_INFRA = 4
    
    def __init__(self, parent=None):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤–∏–¥–∂–µ—Ç–∞ —Ç–∞–±–æ–≤
        
        Args:
            parent: –†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –≤–∏–¥–∂–µ—Ç
        """
        super().__init__(parent)
        self.tab_widget = None
        self._init_ui()
        self._connect_signals()
    
    def _init_ui(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        layout = QVBoxLayout(self)
        layout.setContentsMargins(0, 0, 0, 0)
        
        # –°–æ–∑–¥–∞–Ω–∏–µ QTabWidget
        self.tab_widget = QTabWidget()
        self.tab_widget.setTabPosition(QTabWidget.TabPosition.North)
        self.tab_widget.setDocumentMode(True)  # –ë–æ–ª–µ–µ –ø–ª–æ—Å–∫–∏–π —Å—Ç–∏–ª—å
        
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–∞–±–æ–≤ (–ø–æ–∫–∞ —Å placeholder –≤–∏–¥–∂–µ—Ç–∞–º–∏)
        self._add_tabs()
        
        layout.addWidget(self.tab_widget)
    
    def _add_tabs(self):
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Ç–∞–±–æ–≤"""
        from src.ui.widgets.table_graph_tab import TableGraphTabWidget
        from src.ui.widgets.full_graph_tab import FullGraphTabWidget
        from src.ui.widgets.bdd_tab import BddTabWidget
        from src.ui.widgets.coverage_matrix_tab import CoverageMatrixTabWidget
        from src.ui.widgets.infra_maturity_tab import InfraMaturityTabWidget
        
        # –¢–∞–± 1: –¢–∞–±–ª–∏—Ü–∞ + –ú–∏–Ω–∏-–≥—Ä–∞—Ñ
        self.table_graph_tab = TableGraphTabWidget(self)
        self.tab_widget.addTab(self.table_graph_tab, "üìä –¢–∞–±–ª–∏—Ü–∞")
        
        # –¢–∞–± 2: –ë–æ–ª—å—à–æ–π –≥—Ä–∞—Ñ
        self.full_graph_tab = FullGraphTabWidget(self)
        self.tab_widget.addTab(self.full_graph_tab, "üåê –ì—Ä–∞—Ñ")
        
        # –¢–∞–± 3: BDD Features
        self.bdd_tab = BddTabWidget(self)
        self.tab_widget.addTab(self.bdd_tab, "üßë‚Äçüíª BDD")
        
        # –¢–∞–± 4: –ú–∞—Ç—Ä–∏—Ü–∞ —Ç—Ä–∞—Å—Å–∏—Ä–æ–≤–æ–∫
        self.coverage_tab = CoverageMatrixTabWidget(self)
        self.tab_widget.addTab(self.coverage_tab, "üìã –¢—Ä–∞—Å—Å–∏—Ä–æ–≤–∫–∏")
        
        # –¢–∞–± 5: INFRA Maturity
        self.infra_tab = InfraMaturityTabWidget(self)
        self.tab_widget.addTab(self.infra_tab, "üèóÔ∏è INFRA")
    
    def _connect_signals(self):
        """–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å–∏–≥–Ω–∞–ª–æ–≤"""
        self.tab_widget.currentChanged.connect(self._on_tab_changed)
    
    def _on_tab_changed(self, index: int):
        """
        –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–º–µ–Ω—ã —Ç–∞–±–∞
        
        Args:
            index: –ò–Ω–¥–µ–∫—Å –Ω–æ–≤–æ–≥–æ —Ç–∞–±–∞
        """
        tab_name = self.tab_widget.tabText(index)
        self.tab_changed.emit(index, tab_name)
    
    def switch_to_tab(self, index: int):
        """
        –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π —Ç–∞–±
        
        Args:
            index: –ò–Ω–¥–µ–∫—Å —Ç–∞–±–∞ (–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã TAB_*)
        """
        if 0 <= index < self.tab_widget.count():
            self.tab_widget.setCurrentIndex(index)
    
    def get_current_tab(self) -> int:
        """
        –ü–æ–ª—É—á–∏—Ç—å –∏–Ω–¥–µ–∫—Å —Ç–µ–∫—É—â–µ–≥–æ —Ç–∞–±–∞
        
        Returns:
            –ò–Ω–¥–µ–∫—Å —Ç–µ–∫—É—â–µ–≥–æ —Ç–∞–±–∞
        """
        return self.tab_widget.currentIndex()
    
    def setup_hotkeys(self):
        """
        –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≥–æ—Ä—è—á–∏—Ö –∫–ª–∞–≤–∏—à –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–∞–±–æ–≤
        
        Ctrl+1/2/3/4/5 –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è
        """
        from PyQt6.QtGui import QShortcut, QKeySequence
        
        shortcuts = [
            (QKeySequence("Ctrl+1"), self.TAB_TABLE),
            (QKeySequence("Ctrl+2"), self.TAB_GRAPH),
            (QKeySequence("Ctrl+3"), self.TAB_BDD),
            (QKeySequence("Ctrl+4"), self.TAB_COVERAGE),
            (QKeySequence("Ctrl+5"), self.TAB_INFRA),
        ]
        
        for key_seq, tab_index in shortcuts:
            shortcut = QShortcut(key_seq, self)
            shortcut.activated.connect(lambda idx=tab_index: self.switch_to_tab(idx))
    
    def load_data(self):
        """–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤–æ –≤—Å–µ —Ç–∞–±—ã"""
        # –í –±—É–¥—É—â–µ–º –∑–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ë–î
        pass
    
    def refresh_all(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤–æ –≤—Å–µ—Ö —Ç–∞–±–∞—Ö"""
        self.table_graph_tab.refresh()
        self.full_graph_tab.refresh()
        self.bdd_tab.refresh()
        self.coverage_tab.refresh()
        self.infra_tab.refresh()
